buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true

    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.1'
group = 'com.nekokittygames.mffs' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modularforcefieldsystem'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/generated/resources"
        }
    }
}
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20200225-1.15.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modularforcefieldsystem {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                modularforcefieldsystem {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'modularforcefieldsystem', '--all', '--output', file('src/generated/resources/'),'--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                modularforcefieldsystem {
                    source sourceSets.main
                }
            }
        }
    }
}
repositories {
    mavenCentral()
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }

    maven { // HWYLA
        name "TehNuts WAILA fork"
        url "http://tehnut.info/maven"
    }
    maven { // OpenComputers
        name "OpenComputers"
        url "http://maven.cil.li/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
//    maven { // McJty's CompatLayer
//        name 'K4 maven'
//        url "http://maven.k-4u.nl/"
//    }
    maven { // CraftTweaker (aka MineTweaker3)
        name 'jared maven'
        url "http://maven.blamejared.com/"
    }
    maven { // ModMaven, there is a bunch of stuff on there
        name 'ModMaven'
        url "http://modmaven.k-4u.nl/"
    }
    repositories {//Curseforge maven, in case some other maven goes offline
        maven {
            name = "CurseForge"
            url = "http://minecraft.curseforge.com/api/maven/"
        }
    }
    /*maven { //IC2
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }*/
    maven { // Redstone Flux
        name 'CoFH Maven'
        url "http://maven.covers1624.net/"
    }
    maven { // Albedo Lights
        url 'http://repo.elytradev.com/'
    }
    maven { url 'http://jitpack.io' }
}


dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.63'
    //compileOnly fg.deobf("mezz.jei:jei-1.15.1:6.0.0-381a0d7.9999:api")
    // at runtime, use the full JEI jar
    //runtimeOnly fg.deobf("mezz.jei:jei-1.15.1:6.0.0-381a0d7.9999")


    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "modularforcefieldsystem",
            "Specification-Vendor": "nekokittygames",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"nekokittygames",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}